// Generated by CoffeeScript 2.3.2
var regx, walk;

regx = /([.\/][^.\/\[\<\s]+|\[[-+]?\d+\]|\[(?:"[^"]+"|'[^']+')\])/;

module.exports = {
  get: function(data, path, valu) {
    var i, item, len, list;
    list = walk(path);
    for (i = 0, len = list.length; i < len; i++) {
      item = list[i];
      if (data != null) {
        if (data.hasOwnProperty(item)) {
          data = data[item];
        } else if (!isNaN(item) && Array.isArray(data) && +item < 0) {
          data = data[data.length + item];
        } else {
          return valu;
        }
      }
    }
    return data;
  },
  set: function(data, path, valu) {
    var done, i, item, last, len, list, n, next;
    list = walk(path);
    last = list.length - 1;
    for (n = i = 0, len = list.length; i < len; n = ++i) {
      item = list[n];
      done = n === last;
      next = done ? valu : {};
      if (data.hasOwnProperty(item)) {
        if (done || typeof data[item] !== 'object') {
          data[item] = next;
        }
      } else if (!isNaN(item) && Array.isArray(data) && +item < 0) {
        item = data.length + item;
        if (done || typeof data[item] !== 'object') {
          data[item] = next;
        }
      } else {
        data[item] = next;
      }
      data = data[item];
    }
    return data;
  }
};

walk = function(path) {
  var chr, i, len, list, part, results;
  list = ('.' + path).split(regx);
  list.shift();
  results = [];
  for (i = 0, len = list.length; i < len; i += 2) {
    part = list[i];
    switch (chr = part[0]) {
      case '.':
      case '/':
        results.push(part.slice(1));
        break;
      case '[':
        if (part[1] === '"' || part[1] === "'") {
          results.push(part.slice(2, -2));
        } else {
          results.push(+(part.slice(1, -1)));
        }
        break;
      default:
        continue;
    }
  }
  return results;
};
